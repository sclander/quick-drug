{"version":3,"sources":["components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","getRandomInt","max","Math","floor","random","generateCard","console","log","state","results","alert","length","Container","Button","onClick","this","Component","App","submitHandler","e","preventDefault","axios","then","response","sortedResults","data","sort","a","b","setState","sortType","sortHandler","type","toggleAll","index","document","querySelectorAll","forEach","item","classList","toggle","switchView","viewName","view","fluid","className","Header","as","color","Form","onSubmit","class","Field","placeholder","map","result","acuteCardiac","includes","dysrhythmia","perioperative","respiratory","fluidCon","cellReg","infect","vom","poo","glucose","hormone","obesity","hf","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wUAKqBA,E,kDAEnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,aAAe,SAACC,GACd,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,IATjB,EAYnBI,aAAe,WACbC,QAAQC,IAAI,QAAS,EAAKC,MAAMC,SAChCC,MAAM,EAAKV,aAAa,EAAKQ,MAAMC,QAAQE,UAX3C,EAAKH,MAAQ,CACVC,QAASV,EAAMU,SAJD,E,0CAiBnB,WACE,OACE,eAACG,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,QAASC,KAAKV,aAAtB,sBACA,4BAAIU,KAAKP,MAAMC,iB,GAvBYO,aCCdC,E,kDAEnB,WAAYlB,GAAQ,IAAD,8BACjB,cAAMA,IASRmB,cAAgB,SAAAC,GACdA,EAAEC,iBAEFC,IAAM,sEACLC,MAAK,SAAAC,GACJ,IAAIC,EAAgBD,EAASE,KAAKC,MAAK,SAACC,EAAGC,GACzC,OAAGD,EAAC,KAAWC,EAAC,MAAoB,EACjCD,EAAC,KAAWC,EAAC,KAAmB,EAC5B,KAGT,EAAKC,SAAL,2BACK,EAAKrB,OADV,IAEEC,QAASe,EACTM,SAAU,cAxBG,EA6BnBC,YAAc,SAACC,GACD,QAARA,GAAyC,QAAvB,EAAKxB,MAAMsB,WAC/BE,EAAO,cAET,IAAIR,EAAgB,YAAI,EAAKhB,MAAMC,SAASiB,MAAK,SAACC,EAAGC,GACnD,OAAGD,EAAEK,GAAQJ,EAAEI,IAAiB,EAC7BL,EAAEK,GAAQJ,EAAEI,GAAgB,EACxB,KAGT,EAAKH,SAAL,2BACK,EAAKrB,OADV,IAEEC,QAASe,EACTM,SAAUE,MA1CK,EA8CnBC,UAAY,SAACC,GACX5B,QAAQC,IAAI2B,GACZC,SAASC,iBAAT,eAAkCF,EAAlC,wBAAuDA,EAAvD,YAAuEG,SAAQ,SAAAC,GAC7EhC,QAAQC,IAAI+B,GACZA,EAAKC,UAAUC,OAAO,cAlDP,EAsDnBC,WAAa,SAACC,GACZ,EAAKb,SAAL,2BACK,EAAKrB,OADV,IAEEmC,KAAMD,MAtDR,EAAKlC,MAAQ,CACVC,QAAS,GACTqB,SAAU,OACVa,KAAM,SANQ,E,0CA6DnB,WAAU,IAAD,OACP,OACE,eAAC/B,EAAA,EAAD,CAAWgC,OAAK,EAACC,UAAU,YAA3B,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,wBACA,gCACE,cAAClC,EAAA,EAAD,CAAQmC,MAAM,QAAQlC,QAAS,kBAAM,EAAK2B,WAAW,UAArD,mBACA,cAAC5B,EAAA,EAAD,CAAQmC,MAAM,QAAQlC,QAAS,kBAAM,EAAK2B,WAAW,UAArD,sBAEF,eAACQ,EAAA,EAAD,CAAMJ,UAAS,eAA6B,SAAnB9B,KAAKP,MAAMmC,KAAkB,GAAK,QAAUO,SAAUnC,KAAKG,cAApF,UACE,sBAAKiC,MAAM,UAAX,UACE,eAACF,EAAA,EAAKG,MAAN,WACE,iDACA,uBAAOC,YAAY,mCAErB,cAACxC,EAAA,EAAD,CAAQmC,MAAM,OAAOhB,KAAK,SAA1B,uBAEF,sBAAKa,UAAU,UAAf,UACE,mBAAG/B,QAAS,kBAAM,EAAKiB,YAAY,qBAAnC,8BACA,qBAAKc,UAAU,wBAA4B,kEAC3C,qBAAKA,UAAU,sBAA0B,oEACzC,qBAAKA,UAAU,wBAA4B,kEAC3C,qBAAKA,UAAU,sBAA0B,gEACzC,qBAAKA,UAAU,oBAAwB,kEACvC,qBAAKA,UAAU,mBAAuB,wEACtC,qBAAKA,UAAU,iBAAqB,mEACpC,qBAAKA,UAAU,cAAkB,gEACjC,qBAAKA,UAAU,cAAkB,gEACjC,qBAAKA,UAAU,kBAAsB,uEACrC,qBAAKA,UAAU,kBAAsB,6DACrC,qBAAKA,UAAU,kBAAsB,4DACrC,qBAAKA,UAAU,aAAiB,qEAElC,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAM/B,QAAS,kBAAM,EAAKiB,YAAY,SAArD,kBACA,qBAAKc,UAAU,MAAM/B,QAAS,kBAAM,EAAKiB,YAAY,UAArD,mBACA,qBAAKc,UAAU,MAAf,iBACA,qBAAKA,UAAU,MAAf,yBACA,qBAAKA,UAAU,MAAf,+BACA,qBAAKA,UAAU,MAAf,0BACA,qBAAKA,UAAU,MAAf,6BAEF,qBAAKA,UAAU,SAAf,SACG9B,KAAKP,MAAMC,QAAQ6C,KAAI,SAAEC,EAAQrB,GAChC,IAAIsB,EAAeD,EAAO,oBAAoBE,SAAS,iBACnDC,EAAcH,EAAO,oBAAoBE,SAAS,mBAClDE,EAAgBJ,EAAO,oBAAoBE,SAAS,iBACpDG,EAAcL,EAAO,oBAAoBE,SAAS,eAClDI,EAAWN,EAAO,oBAAoBE,SAAS,iBAC/CK,EAAUP,EAAO,oBAAoBE,SAAS,uBAC9CM,EAASR,EAAO,oBAAoBE,SAAS,kBAC7CO,EAAMT,EAAO,oBAAoBE,SAAS,eAC1CQ,EAAMV,EAAO,oBAAoBE,SAAS,eAC1CS,EAAUX,EAAO,oBAAoBE,SAAS,sBAC9CU,EAAUZ,EAAO,oBAAoBE,SAAS,YAC9CW,EAAUb,EAAO,oBAAoBE,SAAS,WAC9CY,EAAKd,EAAO,oBAAoBE,SAAS,iBAE7C,OACE,sBAAKZ,UAAS,kBAAaX,GAA3B,UACE,sBAAKW,UAAU,MAAM/B,QAAS,WAAO,EAAKmB,UAAUC,IAApD,UACGsB,EAAe,qBAAKX,UAAU,wBAA+B,GAC7Da,EAAc,qBAAKb,UAAU,sBAA4B,GACzDc,EAAgB,qBAAKd,UAAU,wBAA8B,GAC7De,EAAc,qBAAKf,UAAU,sBAA4B,GACzDgB,EAAW,qBAAKhB,UAAU,oBAA0B,GACpDiB,EAAU,qBAAKjB,UAAU,mBAAyB,GAClDkB,EAAS,qBAAKlB,UAAU,iBAAuB,GAC/CmB,EAAM,qBAAKnB,UAAU,cAAoB,GACzCoB,EAAM,qBAAKpB,UAAU,cAAoB,GACzCqB,EAAU,qBAAKrB,UAAU,kBAAwB,GACjDsB,EAAU,qBAAKtB,UAAU,kBAAwB,GACjDuB,EAAU,qBAAKvB,UAAU,kBAAwB,GACjDwB,EAAK,qBAAKxB,UAAU,aAAmB,GACvCU,EAAM,KACP,qBAAKV,UAAU,QAAf,SAAwBU,EAAO,mBAEjC,qBAAKV,UAAU,WAAf,SAA2BU,EAAM,QACjC,qBAAKV,UAAU,WAAf,SAA2BU,EAAM,MACjC,qBAAKV,UAAU,WAAf,SAA2BU,EAAM,cACjC,qBAAKV,UAAU,WAAf,SAA2BU,EAAM,oBACjC,qBAAKV,UAAU,WAAf,SAA2BU,EAAO,kBAClC,qBAAKV,UAAU,WAAf,SAA2BU,EAAM,iBAvBMrB,WA6BjD,qBAAKW,UAA8B,SAAnB9B,KAAKP,MAAMmC,KAAkB,GAAK,OAAlD,SACE,cAAC,EAAD,CAAOlC,QAASM,KAAKP,MAAMC,mB,GAvJJO,aCMlBsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAAS8C,eAAe,SAM1BX,M","file":"static/js/main.b14c01f5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form, Container, Header } from 'semantic-ui-react'\nimport '../App.css';\nimport axios from 'axios';\n\nexport default class Cards extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       results: props.results,\n    }\n  }\n\n  getRandomInt = (max) => {\n    return Math.floor(Math.random() * max);\n  }\n\n  generateCard = () => {\n    console.log('hello', this.state.results);\n    alert(this.getRandomInt(this.state.results.length))\n  }\n\n  render() {\n    return (\n      <Container>\n        <Button onClick={this.generateCard}>New Card</Button>\n        <p>{this.state.results}</p>\n      </Container>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Button, Form, Container, Header } from 'semantic-ui-react'\nimport './App.css';\nimport Cards from './components/Cards';\nimport axios from 'axios';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       results: [],\n       sortType: 'DRUG',\n       view: 'TABLE'\n    }\n  }\n\n  submitHandler = e => {\n    e.preventDefault();\n  \n    axios('https://sheet.best/api/sheets/b3964dec-ab80-4600-b7c1-5a8bd89b39cd')\n    .then(response => {\n      let sortedResults = response.data.sort((a, b) => {\n        if(a['DRUG'] < b['DRUG']) { return -1; }\n        if(a['DRUG'] > b['DRUG']) { return 1; }\n        return 0;\n      });\n\n      this.setState({\n        ...this.state,\n        results: sortedResults,\n        sortType: 'DRUG'\n      });\n    })\n  }\n\n  sortHandler = (type) => {\n    if (type == 'DRUG' && this.state.sortType == 'DRUG') {\n      type = 'BRAND NAME'\n    }\n    let sortedResults = [...this.state.results].sort((a, b) => {\n      if(a[type] < b[type]) { return -1; }\n      if(a[type] > b[type]) { return 1; }\n      return 0;\n    });\n\n    this.setState({\n      ...this.state,\n      results: sortedResults,\n      sortType: type\n    });\n  }\n\n  toggleAll = (index) => {\n    console.log(index);\n    document.querySelectorAll(`.row-${index} .info, .row-${index} .brand`).forEach(item => {\n      console.log(item);\n      item.classList.toggle('hidden');\n    });\n  }\n\n  switchView = (viewName) => {\n    this.setState({\n      ...this.state,\n      view: viewName\n    })\n  }\n\n  render() {\n    return (\n      <Container fluid className=\"container\">\n        <Header as='h2'>Quick Drug</Header>\n        <div>\n          <Button color=\"green\" onClick={() => this.switchView('TABLE')}>Table</Button>\n          <Button color=\"green\" onClick={() => this.switchView('CARDS')}>Cards</Button>\n        </div>\n        <Form className={`form ${this.state.view == 'TABLE' ? '' : 'gone'}`} onSubmit={this.submitHandler}>\n          <div class=\"spacing\">\n            <Form.Field>\n              <label>Search Drugs</label>\n              <input placeholder='Enter generic or brand name' />\n            </Form.Field>\n            <Button color=\"blue\" type='submit'>Submit</Button>\n          </div>\n          <div className=\"spacing\">\n            <b onClick={() => this.sortHandler('SECTIONS FROM CM')}>Key:&nbsp;&nbsp;&nbsp;</b>\n            <div className=\"badge acute-cardiac\"></div><span>-&nbsp;Acute Cardiac&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge dysrhythmia\"></div><span>-&nbsp;Antidysrhythmic&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge perioperative\"></div><span>-&nbsp;Perioperative&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge respiratory\"></div><span>-&nbsp;Respiratory&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge fluid-con\"></div><span>-&nbsp;Fluid Control&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge cell-reg\"></div><span>-&nbsp;Cellular Regulation&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge infect\"></div><span>-&nbsp;Anti-infective&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge vom\"></div><span>-&nbsp;Anti-emetic&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge poo\"></div><span>-&nbsp;Elimination&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge glucose\"></div><span>-&nbsp;Glucose Regulation&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge hormone\"></div><span>-&nbsp;Hormones&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge obesity\"></div><span>-&nbsp;Obesity&nbsp;&nbsp;&nbsp;</span>\n            <div className=\"badge hf\"></div><span>-&nbsp;Heart Failure&nbsp;&nbsp;&nbsp;</span>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\" onClick={() => this.sortHandler('DRUG')}>DRUG</div>\n            <div className=\"col\" onClick={() => this.sortHandler('CLASS')}>CLASS</div>\n            <div className=\"col\">MOA</div>\n            <div className=\"col\">INDICATIONS</div>\n            <div className=\"col\">CONTRAINDICATIONS</div>\n            <div className=\"col\">SIDE EFFECTS</div>\n            <div className=\"col\">IMPLICATIONS</div>\n          </div>\n          <div className=\"scroll\"> \n            {this.state.results.map(( result, index ) => {\n              let acuteCardiac = result['SECTIONS FROM CM'].includes('Acute Cardiac');\n              let dysrhythmia = result['SECTIONS FROM CM'].includes('Antidysrhythmic');\n              let perioperative = result['SECTIONS FROM CM'].includes('Perioperative');\n              let respiratory = result['SECTIONS FROM CM'].includes('Respiratory');\n              let fluidCon = result['SECTIONS FROM CM'].includes('Fluid Control');\n              let cellReg = result['SECTIONS FROM CM'].includes('Cellular Regulation');\n              let infect = result['SECTIONS FROM CM'].includes('Anti-infective');\n              let vom = result['SECTIONS FROM CM'].includes('Anti-emetic');\n              let poo = result['SECTIONS FROM CM'].includes('Elimination');\n              let glucose = result['SECTIONS FROM CM'].includes('Glucose Regulation');\n              let hormone = result['SECTIONS FROM CM'].includes('Hormones');\n              let obesity = result['SECTIONS FROM CM'].includes('Obesity');\n              let hf = result['SECTIONS FROM CM'].includes('Heart Failure');\n\n              return (\n                <div className={`row row-${index}`} key={index}>\n                  <div className=\"col\" onClick={() => {this.toggleAll(index)}}>\n                    {acuteCardiac ? <div className=\"badge acute-cardiac\"></div> : ''}\n                    {dysrhythmia ? <div className=\"badge dysrhythmia\"></div>: ''}\n                    {perioperative ? <div className=\"badge perioperative\"></div>: ''}\n                    {respiratory ? <div className=\"badge respiratory\"></div>: ''}\n                    {fluidCon ? <div className=\"badge fluid-con\"></div>: ''}\n                    {cellReg ? <div className=\"badge cell-reg\"></div>: ''}\n                    {infect ? <div className=\"badge infect\"></div>: ''}\n                    {vom ? <div className=\"badge vom\"></div>: ''}\n                    {poo ? <div className=\"badge poo\"></div>: ''}\n                    {glucose ? <div className=\"badge glucose\"></div>: ''}\n                    {hormone ? <div className=\"badge hormone\"></div>: ''}\n                    {obesity ? <div className=\"badge obesity\"></div>: ''}\n                    {hf ? <div className=\"badge hf\"></div>: ''}\n                    {result['DRUG']}\n                    <div className=\"brand\">{result['BRAND NAME']}</div>\n                  </div>\n                  <div className=\"col info\">{result['CLASS']}</div>\n                  <div className=\"col info\">{result['MOA']}</div>\n                  <div className=\"col info\">{result['INDICATIONS']}</div>\n                  <div className=\"col info\">{result['CONTRAINDICATIONS']}</div>\n                  <div className=\"col info\">{result['SIDE EFFECTS']}</div>\n                  <div className=\"col info\">{result['IMPLICATIONS']}</div>\n                </div>\n              );\n            })}\n          </div>\n        </Form>\n        <div className={this.state.view == 'CARDS' ? '' : 'gone'}>\n          <Cards results={this.state.results}></Cards>\n        </div>\n      </Container>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}